import csv
from datetime import datetime, timedelta

# Date ranges and increments (start date, end date, increment)
date_ranges = [
    ("15/01/2020", "15/01/2020", 2),
    ("15/03/2020", "12/04/2020", 10),
    ("18/04/2020", "27/07/2020", 10),
    ("01/01/2021", "16/02/2021", 10)
]

# Convert dates from strings and sort ranges by start date
parsed_ranges = [(datetime.strptime(start, "%d/%m/%Y"), datetime.strptime(end, "%d/%m/%Y"), increment)
                 for start, end, increment in date_ranges]
parsed_ranges.sort(key=lambda x: x[0])  # Sort by start date

# Find the overall date span
start_date = min([range[0] for range in parsed_ranges])
end_date = max([range[1] for range in parsed_ranges])

# Create a dictionary to store the cumulative count for each day
date_dict = {}
for single_date in (start_date + timedelta(days=n) for n in range((end_date - start_date).days + 1)):
    date_dict[single_date] = 0  # Initialize each day with 0 words known

# Update the dictionary with the specified increments
for start, end, increment in parsed_ranges:
    while start <= end:
        date_dict[start] += increment
        start += timedelta(days=1)

# Calculate the cumulative total
cumulative_total = 0
cumulative_data = []
for date in sorted(date_dict.keys()):
    cumulative_total += date_dict[date]
    cumulative_data.append((date.strftime("%d/%m/%Y"), cumulative_total))

# Write to CSV
with open('cumulative_words_known.csv', 'w', newline='') as file:
    writer = csv.writer(file)
    writer.writerow(["Date", "Total Words Known"])
    writer.writerows(cumulative_data)

print("CSV file 'cumulative_words_known.csv' has been created.")

import csv
from datetime import datetime

# Data to be integrated
additional_data = {
  "2021-02-16": 10,
  "2021-03-28": 12,
  "2021-03-29": 18,
  "2021-03-30": 24,
  "2021-03-31": 30,
  "2021-04-01": 39,
  "2021-04-02": 46,
  "2021-04-03": 53,
  "2021-04-04": 61,
  "2021-04-06": 69,
  "2021-04-09": 76,
  "2021-04-10": 84,
  "2021-04-11": 92,
  "2021-04-12": 106,
  "2021-05-14": 114,
  "2021-05-24": 117,
  "2021-05-26": 131,
  "2021-05-28": 140,
  "2021-05-29": 148,
  "2021-06-04": 157,
  "2021-06-10": 165,
  "2021-06-13": 168,
  "2021-06-16": 176,
  "2021-09-30": 180,
  "2021-10-04": 185,
  "2021-10-06": 191,
  "2021-10-07": 195,
  "2021-10-11": 200,
  "2021-10-12": 210,
  "2021-10-13": 212,
  "2021-10-15": 225,
  "2021-10-16": 233,
  "2021-12-20": 235,
  "2021-12-22": 236,
  "2022-01-19": 244,
  "2022-01-20": 285,
  "2022-01-21": 320,
  "2022-01-24": 336,
  "2022-01-25": 373,
  "2022-01-26": 377,
  "2022-01-27": 407,
  "2022-01-30": 433,
  "2022-02-02": 447,
  "2022-02-03": 449,
  "2022-02-04": 455,
  "2022-02-08": 459,
  "2022-02-09": 473,
  "2022-02-10": 492,
  "2022-03-01": 497,
  "2022-03-03": 505,
  "2022-03-04": 511,
  "2022-03-05": 526,
  "2022-03-06": 535,
  "2022-03-09": 543,
  "2022-03-10": 548,
  "2022-03-15": 554,
  "2022-03-17": 556,
  "2022-03-19": 560,
  "2022-03-25": 564,
  "2022-03-26": 568,
  "2022-03-27": 572,
  "2022-03-28": 579,
  "2022-03-29": 585,
  "2022-04-08": 589,
  "2022-04-12": 593,
  "2022-04-13": 597,
  "2022-04-18": 605,
  "2022-04-23": 610,
  "2022-04-24": 615,
  "2022-04-25": 620,
  "2022-04-26": 627,
  "2022-04-27": 656,
  "2022-04-28": 664,
  "2022-04-29": 671,
  "2022-04-30": 675,
  "2022-05-02": 683,
  "2022-05-03": 690,
  "2022-05-04": 697,
  "2022-05-05": 704,
  "2022-05-06": 727,
  "2022-05-07": 734,
  "2022-05-17": 735,
  "2022-05-19": 739,
  "2022-05-20": 751,
  "2022-05-23": 762,
  "2022-05-25": 774,
  "2022-05-30": 781,
  "2022-05-31": 798,
  "2022-06-03": 814,
  "2022-06-08": 819,
  "2022-06-20": 830,
  "2022-06-21": 853,
  "2022-06-22": 858,
  "2022-06-23": 863,
  "2022-06-24": 881,
  "2022-06-25": 904,
  "2022-06-26": 925,
  "2022-06-27": 947,
  "2022-06-28": 966,
  "2022-06-29": 985,
  "2022-06-30": 1001,
  "2022-07-01": 1027,
  "2022-07-02": 1048,
  "2022-07-03": 1061,
  "2022-07-04": 1079,
  "2022-07-05": 1081,
  "2022-07-06": 1086,
  "2022-07-07": 1087,
  "2022-07-08": 1106,
  "2022-07-09": 1112,
  "2022-07-10": 1118,
  "2022-07-11": 1129,
  "2022-07-12": 1151,
  "2022-07-14": 1176,
  "2022-07-15": 1204,
  "2022-07-17": 1215,
  "2022-07-18": 1228,
  "2022-07-19": 1237,
  "2022-07-20": 1250,
  "2022-07-21": 1262,
  "2022-07-22": 1291,
  "2022-07-23": 1309,
  "2022-07-24": 1321,
  "2022-07-25": 1343,
  "2022-07-26": 1353,
  "2022-07-28": 1364,
  "2022-08-03": 1373,
  "2022-08-04": 1384,
  "2022-08-05": 1389,
  "2022-08-06": 1403,
  "2022-08-08": 1411,
  "2022-08-09": 1418,
  "2022-08-10": 1433,
  "2022-08-11": 1443,
  "2022-08-15": 1448,
  "2022-08-16": 1458,
  "2023-02-15": 1463,
  "2023-02-16": 1467,
  "2023-02-18": 1470,
  "2023-02-21": 1479,
  "2023-02-22": 1489,
  "2023-02-23": 1502,
  "2023-02-24": 1511,
  "2023-02-25": 1537,
  "2023-02-26": 1559,
  "2023-02-27": 1574,
  "2023-02-28": 1590,
  "2023-03-01": 1615,
  "2023-03-02": 1632,
  "2023-03-03": 1661,
  "2023-03-04": 1680,
  "2023-03-05": 1695,
  "2023-03-06": 1709,
  "2023-03-07": 1727,
  "2023-03-08": 1742,
  "2023-03-09": 1754,
  "2023-03-10": 1773,
  "2023-03-11": 1785,
  "2023-03-12": 1798,
  "2023-03-13": 1806,
  "2023-03-14": 1807,
  "2023-03-16": 1815,
  "2023-03-18": 1820,
  "2023-10-14": 1833,
  "2023-10-20": 1837,
  "2023-10-21": 1840,
  "2023-10-22": 1843,
  "2023-10-23": 1856,
  "2023-10-24": 1861,
  "2023-10-25": 1864,
  "2023-10-26": 1875,
  "2023-10-27": 1878,
  "2023-10-28": 1880,
  "2023-10-29": 1888,
  "2023-10-30": 1889,
  "2023-11-06": 1890,
  "2023-11-11": 1894,
  "2023-11-13": 1900,
  "2023-11-15": 1905,
  "2023-11-16": 1909,
  "2023-11-17": 1916,
  "2023-11-21": 1918,
  "2023-11-23": 1920,
  "2023-11-24": 1931,
  "2023-11-25": 1935,
  "2023-11-26": 1953,
  "2023-11-28": 1968,
  "2023-11-30": 1974,
  "2023-12-01": 2031,
  "2023-12-03": 2046,
  "2023-12-04": 2083,
  "2023-12-06": 2120,
  "2023-12-07": 2135,
  "2023-12-09": 2151,
  "2023-12-11": 2184,
  "2023-12-12": 2212,
  "2024-03-21": 2213,
  "2024-03-24": 2228,
  "2024-03-25": 2246,
  "2024-03-26": 2275,
  "2024-03-27": 2292,
  "2024-03-28": 2313,
  "2024-03-29": 2334,
  "2024-03-30": 2344,
  "2024-03-31": 2394,
  "2024-04-01": 2409,
  "2024-04-02": 2428,
  "2024-04-05": 2449,
  "2024-04-06": 2475,
  "2024-04-07": 2493,
  "2024-04-09": 2515,
  "2024-04-10": 2533,
  "2024-04-11": 2563,
  "2024-04-12": 2589,
  "2024-04-13": 2615,
  "2024-04-14": 2623,
  "2024-04-15": 2625,
  "2024-04-16": 2648,
  "2024-04-17": 2657,
  "2024-04-18": 2676,
  "2024-04-19": 2711,
  "2024-04-20": 2731,
  "2024-04-21": 2742,
  "2024-04-22": 2777,
  "2024-04-23": 2789,
  "2024-04-24": 2799
}
# Step 1: Load existing data and find the last cumulative total
with open('cumulative_words_known.csv', 'r') as file:
    reader = csv.reader(file)
    last_row = None
    for row in reader:
        last_row = row  # Find the last non-empty row

# Extract the last cumulative total (make sure to handle potential errors in real scenarios)
last_cumulative_total = int(last_row[1]) if last_row else 0

# Step 2: Prepare the updated entries for additional data
updates = []
for date, increment in additional_data.items():
    new_total = last_cumulative_total + increment
    formatted_date = datetime.strptime(date, "%Y-%m-%d").strftime("%d/%m/%Y")
    updates.append([formatted_date, new_total])

# Step 3: Append these entries to the original CSV file
with open('cumulative_words_known.csv', 'a', newline='') as file:
    writer = csv.writer(file)
    writer.writerows(updates)

print("Updated CSV file 'cumulative_words_known.csv' with new data.")